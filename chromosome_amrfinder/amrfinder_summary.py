import os
import pandas as pd
import argparse

# T·∫°o parser ƒë·ªÉ nh·∫≠n tham s·ªë t·ª´ d√≤ng l·ªánh
parser = argparse.ArgumentParser(description='T·ªïng h·ª£p Class/Subclass t·ª´ c√°c file *_amrfinder.txt')

parser.add_argument('--input', '-i', required=True, help='ƒê∆∞·ªùng d·∫´n t·ªõi folder ch·ª©a c√°c file *_amrfinder.txt')
parser.add_argument('--output', '-o', required=True, help='ƒê∆∞·ªùng d·∫´n v√† t√™n file xu·∫•t k·∫øt qu·∫£')

args = parser.parse_args()

folder_path = args.input
output_file = args.output

# Ki·ªÉm tra th∆∞ m·ª•c t·ªìn t·∫°i

if not os.path.isdir(folder_path):
    print(f"Th∆∞ m·ª•c kh√¥ng t·ªìn t·∫°i: {folder_path}")
    exit()

# T√¨m file *_amrfinder.txt
file_list = sorted([f for f in os.listdir(folder_path) if f.endswith('_amrfinder.txt')])

if not file_list:
    print("Kh√¥ng t√¨m th·∫•y file n√†o c√≥ h·∫≠u t·ªë '_amrfinder.txt' trong th∆∞ m·ª•c.")
    exit()

print(f"T√¨m th·∫•y {len(file_list)} file c·∫ßn x·ª≠ l√Ω.")

# X·ª≠ l√Ω d·ªØ li·ªáu
all_classes = set()
results = {}

for file_name in file_list:
    file_path = os.path.join(folder_path, file_name)
    print(f"üîç ƒêang x·ª≠ l√Ω file: {file_name}")

    try:
        df = pd.read_csv(file_path, sep='\t')
    except Exception as e:
        print(f"L·ªói ƒë·ªçc file {file_name}: {e}")
        continue

    # Ki·ªÉm tra c·ªôt c·∫ßn thi·∫øt
    if 'Class' not in df.columns or 'Subclass' not in df.columns:
        print(f"B·ªè qua file {file_name} do thi·∫øu c·ªôt Class/Subclass.")
        continue

    # Gh√©p Class/Subclass
    df['Class_Subclass'] = df['Class'].fillna('NA') + ' / ' + df['Subclass'].fillna('NA')
    classes_in_file = set(df['Class_Subclass'].unique())

    results[file_name] = classes_in_file
    all_classes.update(classes_in_file)

# T·∫°o b·∫£ng k·∫øt qu·∫£
all_classes = sorted(all_classes)
final_table = pd.DataFrame(columns=['File'] + all_classes)

for file_name in file_list:
    row = {'File': file_name}

    if file_name in results:
        for class_name in all_classes:
            row[class_name] = '1' if class_name in results[file_name] else '0'
    else:
        for class_name in all_classes:
            row[class_name] = '-'

    final_table = pd.concat([final_table, pd.DataFrame([row])], ignore_index=True)

# Xu·∫•t file excel
try:
    final_table.to_csv(output_file, index=False)
    print(f"Done! ƒê√£ t·∫°o file output: {output_file}")
except Exception as e:
    print(f"L·ªói khi l∆∞u file output {output_file}: {e}")